import logging.config

loggingConfig = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "simple": {
            "format": "%(name)-45s - %(levelname)-6s - %(message)s"
        },
        "extended": {
            "format": "%(asctime)s - %(name)-45s - %(levelname)-6s - %(message)s"
        },
        "json": {
            "format": "name: %(name)s, level: %(levelname)s, time: %(asctime)s, message: %(message)s"
            }
    },

    "handlers": {
        "console_handler": {
            "class": "logging.StreamHandler",
            "level": "DEBUG",
            "formatter": "simple",
            "stream": "ext://sys.stdout"
        },

        "info_file_handler": {
            "class": "logging.FileHandler",
            "level": "INFO",
            "formatter": "extended",
            "filename": "Log/info.log",
            "encoding": "utf8",

            "mode": "a"
        },

        "debug_file_handler": {
            "class": "logging.FileHandler",
            "level": "DEBUG",
            "formatter": "extended",
            "filename": "Log/debug.log",
            "encoding": "utf8",

            "mode": "a"
        },

        "error_file_handler": {
            "class": "logging.FileHandler",
            "level": "ERROR",
            "formatter": "extended",
            "filename": "Log/error.log",
            "encoding": "utf8",

            "mode": "a"
        }
    },

    "loggers": {
        
    },

    "root": {
        # Use this to log error message to file
        "level": "ERROR",
        "handlers": ["error_file_handler"]
    }
}

def configureLoggers():
    resLoggers = dict()

    # Module
    resLoggers["Module"] = {
        "level": "DEBUG",
        "propagate": True,
        "handlers": ["console_handler", "info_file_handler"]}
    # End Module


    # Debug Kafka
    # resLoggers["kafka.coordinator"] = {
    #     "level": "DEBUG",
    #     "propagate": True,
    #     "handlers": ["debug_file_handler"]}
    # End Debug Kafka
    return resLoggers
    

def setupLogging():
    loggingConfig["loggers"] = configureLoggers()
    logging.config.dictConfig(loggingConfig)