# Standard library imports
import json
import threading

# Third party imports
from kafka import KafkaConsumer

# Local application imports
from Config.config import NmapAgentsAddress, KafkaTopicNames, KafkaConfig, KafkaGroupIds
from Module.AgentCaller.nmapCaller import NmapCaller

class NmapScanConsumers(threading.Thread):
    def __init__(self):
        threading.Thread.__init__(self)
        #TODO: auto_comit = false
        self.consumer = KafkaConsumer(
                        KafkaTopicNames.NMAPSCAN,
                        bootstrap_servers       = KafkaConfig.BOOTSTRAPSERVER,
                        auto_offset_reset       = 'earliest',
                        enable_auto_commit      = True,
                        group_id                = KafkaGroupIds.NMAPSCAN,
                        value_deserializer      = lambda x: json.loads(x.decode('utf-8')))
        self.nmapAgentsAddress = NmapAgentsAddress.NMAPAGENTSADDRESS
        self.totalAgent = len(self.nmapAgentsAddress)
        self.curAgentIndex = 0

    def run(self):
        for message in self.consumer:
            try: #To make sure the thread never die
                data = message.value
                print('{} added to nmapScan Queue'.format(data))

                while True:
                    nmapAgentAddress = self.nmapAgentsAddress[self.curAgentIndex]
                    self.curAgentIndex = (self.curAgentIndex + 1) % self.totalAgent
                    if (True):
                        jData = json.dumps(data)
                        nmapCaller = NmapCaller(nmapAgentAddress.get('HOST'), nmapAgentAddress.get('PORT'), jData)
                        nmapCaller.start()
                        break
                    

            except Exception as e:
                # TODO: ERROR logging
                print(e)

            

 