# Standard library imports
import json
import threading
import logging

# Third party imports
from kafka import KafkaConsumer

# Local application imports
from Config.config import NmapAgentsAddress, KafkaTopicNames, KafkaConfig, KafkaGroupIds
from Module.AgentCaller.nmapCaller import NmapCaller

class nmapScanConsumers(threading.Thread):
    def __init__(self):
        threading.Thread.__init__(self)
        self.consumer = KafkaConsumer(
                        KafkaTopicNames.NMAPSCAN,
                        bootstrap_servers       = KafkaConfig.BOOTSTRAPSERVER,
                        auto_offset_reset       = 'earliest',
                        enable_auto_commit      = True,
                        group_id                = KafkaGroupIds.NMAPSCAN,
                        value_deserializer      = lambda x: json.loads(x.decode('utf-8')))

    def run(self):
        for message in self.consumer:
            data = message.value
            print('{} added to Queue'.format(data))
            jData = {}
            jData['target'] = data.get('target', '')
            jData['action'] = data.get('action', 'newScan')

            jData['actions'] = 'full'

            if (jData['target'] != ''):
                nmapAgents = NmapAgentsAddress.NMAPAGENTSADDRESS
                for nmapAgent in nmapAgents:
                    if (True):
                        jData = json.dumps(jData)
                        nmapCaller = NmapCaller(nmapAgent.get('HOST'), nmapAgent.get('PORT'), jData)
                        nmapCaller.start()
                        nmapCaller.join()
                        break

            

 