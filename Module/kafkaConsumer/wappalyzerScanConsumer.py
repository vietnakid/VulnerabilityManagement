# Standard library imports
import json
import threading
import logging

# Third party imports
from kafka import KafkaConsumer

# Local application imports
from Config.config import KafkaTopicNames, KafkaConfig, KafkaGroupIds, WappalyzerAgents
from Module.AgentCaller.wappalyzerCaller import WappalyzerCaller

class WappalyzerScanConsumers(threading.Thread):
    def __init__(self):
        threading.Thread.__init__(self)
        self.consumer = KafkaConsumer(
                        KafkaTopicNames.WAPPALYZERSCAN,
                        bootstrap_servers       = KafkaConfig.BOOTSTRAPSERVER,
                        auto_offset_reset       = 'earliest',
                        enable_auto_commit      = False,
                        group_id                = KafkaGroupIds.WAPPALYZERSCAN,
                        value_deserializer      = lambda x: json.loads(x.decode('utf-8')))
        self.logger = logging.getLogger(__name__)
        self.wappalyzerAgentsAddress = WappalyzerAgents.WAPPALYZER_AGENT_ADDRESS

    def run(self):
        try:
            for message in self.consumer:
                data = message.value
                self.logger.info('Recieved {}_{}'.format(data.get("target"), data.get("hostname")))

                HOST = self.wappalyzerAgentsAddress[0]['HOST']
                PORT = self.wappalyzerAgentsAddress[0]['PORT']
                wappalyzerCaller = WappalyzerCaller(HOST, PORT, data)
                wappalyzerCaller.start()

                self.consumer.commit()
        except:
            self.logger.exception(message.value)
            

            

            

 