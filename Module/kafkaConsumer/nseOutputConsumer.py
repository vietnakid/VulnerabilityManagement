# Standard library imports
import json
import threading
import logging

# Third party imports
from kafka import KafkaConsumer

# Local application imports
from Config.config import KafkaTopicNames, KafkaConfig, KafkaGroupIds
from Module.kafkaProducer.elasticSendProducer import ElasticSendProducers

class NSEOutputConsumers(threading.Thread):
    def __init__(self):
        threading.Thread.__init__(self)
        self.consumer = KafkaConsumer(
                        KafkaTopicNames.NSEOUTPUT,
                        bootstrap_servers       = KafkaConfig.BOOTSTRAPSERVER,
                        auto_offset_reset       = 'earliest',
                        enable_auto_commit      = False,
                        group_id                = KafkaGroupIds.NSEOUTPUT,
                        value_deserializer      = lambda x: json.loads(x.decode('utf-8')))
        self.logger = logging.getLogger(__name__)

    def run(self):
        try:
            for message in self.consumer:
                data = message.value
                self.logger.info('Recieved {}'.format(data.get("target")))

                elasticData = self.parseToElasticData(data)
                if len(elasticData) > 0:
                    elasticSendProducer = ElasticSendProducers()
                    elasticSendProducer.sendDataToQueue(elasticData)
                self.consumer.commit()
        except:
            self.logger.exception(message.value)
 
    def parseToElasticData(self, data):
        result = data
        result["type"] = "nseOutput"
        return result